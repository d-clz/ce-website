{"remainingRequest":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js!/home/dclz/vivexelt-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/dclz/vivexelt-admin/src/core/utils/type.js","dependencies":[{"path":"/home/dclz/vivexelt-admin/src/core/utils/type.js","mtime":1620325383198},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js","mtime":1620325525308},{"path":"/home/dclz/vivexelt-admin/node_modules/eslint-loader/index.js","mtime":1620142637801}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCBfdHlwZW9mIGZyb20gIi9ob21lL2RjbHovdml2ZXhlbHQtYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vdHlwZW9mIjsKCi8qKgogKiBWYWx1ZSB0eXBlIG9mIG9iamVjdAogKiBAcGFyYW0gdmFsCiAqIEByZXR1cm5zIHtib29sZWFufQogKi8KZXhwb3J0IHZhciBpc09iamVjdCA9IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkgewogIHN3aXRjaCAoX3R5cGVvZih2YWwpKSB7CiAgICBjYXNlICdudWxsJzoKICAgICAgcmV0dXJuIGZhbHNlOwoKICAgIGNhc2UgJ29iamVjdCc6CiAgICAgIHJldHVybiB0cnVlOwoKICAgIGNhc2UgJ2Z1bmN0aW9uJzoKICAgICAgcmV0dXJuIHRydWU7CgogICAgZGVmYXVsdDoKICAgICAgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogIH0KfTsKLyoqCiAqIFZhbHVlIHR5cGUgb2Ygc3RyaW5nCiAqIEBwYXJhbSB2YWwKICogQHJldHVybnMge2Jvb2xlYW59CiAqLwoKZXhwb3J0IHZhciBpc1N0cmluZyA9IGZ1bmN0aW9uIGlzU3RyaW5nKHZhbCkgewogIHJldHVybiB0eXBlb2YgdmFsID09PSAnc3RyaW5nJzsKfTsKLyoqCiAqIFZhbHVlIHR5cGUgb2YgbnVtYmVyCiAqIEBwYXJhbSB2YWwKICogQHJldHVybnMge2Jvb2xlYW59CiAqLwoKZXhwb3J0IHZhciBpc051bWJlciA9IGZ1bmN0aW9uIGlzTnVtYmVyKHZhbCkgewogIHJldHVybiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJzsKfTsKLyoqCiAqIFZhbHVlIHR5cGUgb2YgYm9vbGVhbgogKiBAcGFyYW0gdmFsCiAqIEByZXR1cm5zIHtib29sZWFufQogKi8KCmV4cG9ydCB2YXIgaXNCb29sZWFuID0gZnVuY3Rpb24gaXNCb29sZWFuKHZhbCkgewogIHJldHVybiB0eXBlb2YgdmFsID09PSAnYm9vbGVhbic7Cn07CmV4cG9ydCB2YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIGlzRnVuY3Rpb24oZm4pIHsKICByZXR1cm4gdHlwZW9mIGZuID09PSAnZnVuY3Rpb24nIHx8IGZuIGluc3RhbmNlb2YgUHJvbWlzZTsKfTsKLyoqCiAqIENvbnZlcnQgc3RyaW5nIHRvIHRhcmdldCB0eXBlCiAqIEBwYXJhbSB2YWwKICogQHJldHVybnMgeyp9CiAqLwoKZXhwb3J0IHZhciBjb252ZXJ0U3RyaW5nVG9UYXJnZXRUeXBlID0gZnVuY3Rpb24gY29udmVydFN0cmluZ1RvVGFyZ2V0VHlwZSh2YWwpIHsKICByZXR1cm4gdmFsID09PSAndHJ1ZScgfHwgdmFsID09PSAnZmFsc2UnID8gdmFsID09PSAndHJ1ZScgOiAhaXNOYU4odmFsKSA/IE51bWJlcih2YWwpIDogdmFsOwp9Ow=="},{"version":3,"sources":["/home/dclz/vivexelt-admin/src/core/utils/type.js"],"names":["isObject","val","isString","isNumber","isBoolean","isFunction","fn","Promise","convertStringToTargetType","isNaN","Number"],"mappings":";;;AAAA;;;;;AAKA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AAC/B,kBAAeA,GAAf;AACE,SAAK,MAAL;AACE,aAAO,KAAP;;AACF,SAAK,QAAL;AACE,aAAO,IAAP;;AACF,SAAK,UAAL;AACE,aAAO,IAAP;;AACF;AAAS;AACP,eAAO,KAAP;AACD;AATH;AAWD,CAZM;AAcP;;;;;;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACD,GAAD,EAAS;AAC/B,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD,CAFM;AAIP;;;;;;AAKA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACF,GAAD,EAAS;AAC/B,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD,CAFM;AAIP;;;;;;AAKA,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACH,GAAD,EAAS;AAChC,SAAO,OAAOA,GAAP,KAAe,SAAtB;AACD,CAFM;AAIP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AAChC,SAAO,OAAOA,EAAP,KAAc,UAAd,IAA4BA,EAAE,YAAYC,OAAjD;AACD,CAFM;AAIP;;;;;;AAKA,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACP,GAAD,EAAS;AAChD,SAAOA,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,OAA1B,GAAoCA,GAAG,KAAK,MAA5C,GAAqD,CAACQ,KAAK,CAACR,GAAD,CAAN,GAAcS,MAAM,CAACT,GAAD,CAApB,GAA4BA,GAAxF;AACD,CAFM","sourcesContent":["/**\n * Value type of object\n * @param val\n * @returns {boolean}\n */\nexport const isObject = (val) => {\n  switch (typeof val) {\n    case 'null':\n      return false\n    case 'object':\n      return true\n    case 'function':\n      return true\n    default: {\n      return false\n    }\n  }\n}\n\n/**\n * Value type of string\n * @param val\n * @returns {boolean}\n */\nexport const isString = (val) => {\n  return typeof val === 'string'\n}\n\n/**\n * Value type of number\n * @param val\n * @returns {boolean}\n */\nexport const isNumber = (val) => {\n  return typeof val === 'number'\n}\n\n/**\n * Value type of boolean\n * @param val\n * @returns {boolean}\n */\nexport const isBoolean = (val) => {\n  return typeof val === 'boolean'\n}\n\nexport const isFunction = (fn) => {\n  return typeof fn === 'function' || fn instanceof Promise\n}\n\n/**\n * Convert string to target type\n * @param val\n * @returns {*}\n */\nexport const convertStringToTargetType = (val) => {\n  return val === 'true' || val === 'false' ? val === 'true' : !isNaN(val) ? Number(val) : val\n}\n"]}]}