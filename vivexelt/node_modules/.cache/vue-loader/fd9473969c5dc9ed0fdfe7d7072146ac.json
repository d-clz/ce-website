{"remainingRequest":"/home/dclz/vivexelt/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dclz/vivexelt/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dclz/vivexelt/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dclz/vivexelt/src/pages/components/BasicElementsSection.vue?vue&type=template&id=0cbcf405&","dependencies":[{"path":"/home/dclz/vivexelt/src/pages/components/BasicElementsSection.vue","mtime":1620142312194},{"path":"/home/dclz/vivexelt/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1620142639126},{"path":"/home/dclz/vivexelt/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt/node_modules/vue-loader/lib/index.js","mtime":1620142639126}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}