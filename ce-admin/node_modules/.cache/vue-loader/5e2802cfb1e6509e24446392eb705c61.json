{"remainingRequest":"/home/dclz/vivexelt-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dclz/vivexelt-admin/src/views/Jobs/CreateNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dclz/vivexelt-admin/src/views/Jobs/CreateNew.vue","mtime":1620438743778},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js","mtime":1620325525308},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/vue-loader/lib/index.js","mtime":1620325533304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBKb2JEZXRhaWwgZnJvbSAnLi9jb21wb25lbnQvSm9iRGV0YWlsJwppbXBvcnQgeyBjbG9uZURlZXAgfSBmcm9tICdAL2NvcmUvdXRpbHMvY29tbW9uJwppbXBvcnQgaW1hZ2VTZXJ2aWNlIGZyb20gJ0AvYXBpL2ltYWdlU2VydmljZScKaW1wb3J0IGpvYlNlcnZpY2UgZnJvbSAnQC9hcGkvam9iU2VydmljZScKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgSm9iRGV0YWlsIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGpvYjogewogICAgICAgIGltYWdlX3VybDogJ2ltZy90aGVtZS9pbWctMS0xMDAweDkwMC5qcGcnLAogICAgICAgIGlkOiAwLAogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHNob3J0X2Rlc2NyaXB0aW9uOiAnJywKICAgICAgICBsaW5rX3ZpZGVvOiAnJywKICAgICAgICBjb3VudHJ5X2NvZGU6ICdWTicsCiAgICAgICAgbWluX2RlZ3JlZTogJ3VuaV91bmRlcmdyYWR1YXRlJywKICAgICAgICBpbmR1c3RyeTogJycsCiAgICAgICAgdHlwZTogJ2dyYWR1YXRlZCcsCiAgICAgICAgYXBwbGljYXRpb25fbGluazogJycsCiAgICAgICAgcmV2aWV3ZWRfbGluazogJycsCiAgICAgICAgb3Blbl9hdDogbmV3IERhdGUoKSwKICAgICAgICBjbG9zZV9hdDogbmV3IERhdGUobmV3IERhdGUoKS5zZXREYXRlKG5ldyBEYXRlKCkuZ2V0RGF0ZSgpICsgMSkpLAogICAgICB9LAogICAgICBpbWFnZUZpbGU6IG51bGwsCiAgICAgIHN1Ym1pdHRpbmc6IGZhbHNlLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgY3JlYXRlSm9iKCkgewogICAgICBjb25zdCBuZXdKb2IgPSBjbG9uZURlZXAodGhpcy5qb2IpCiAgICAgIG5ld0pvYi5vcGVuX2F0ID0gbmV3IERhdGUodGhpcy5qb2Iub3Blbl9hdC50b1N0cmluZygpKS5nZXRUaW1lKCkgLyAxMDAwCiAgICAgIG5ld0pvYi5jbG9zZV9hdCA9IG5ldyBEYXRlKHRoaXMuam9iLmNsb3NlX2F0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSAvIDEwMDAKICAgICAgLy8gdXBsb2FkIGltYWdlCiAgICAgIHRoaXMuc3VibWl0dGluZyA9IHRydWUKICAgICAgY29uc3QgcmVzID0gYXdhaXQgaW1hZ2VTZXJ2aWNlLnVwbG9hZEltYWdlKHRoaXMuaW1hZ2VGaWxlKQogICAgICBpZiAoCiAgICAgICAgIXRoaXMuaGFuZGxlUmVzcG9uc2VTZXJ2ZXIocmVzLCAocmVzKSA9PiB7CiAgICAgICAgICBpZiAocmVzLmltYWdlKSB7CiAgICAgICAgICAgIG5ld0pvYi5pbWFnZV91cmwgPSByZXMuaW1hZ2Uuc3JjCiAgICAgICAgICAgIG5ld0pvYi5pbWFnZV9pZCA9IHJlcy5pbWFnZS5pZAogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICkgewogICAgICAgIHRoaXMuc3VibWl0dGluZyA9IGZhbHNlCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgY29uc3QgalJlcyA9IGF3YWl0IGpvYlNlcnZpY2UuY3JlYXRlSm9iKHsgam9iOiBuZXdKb2IgfSkKICAgICAgaWYgKAogICAgICAgICF0aGlzLmhhbmRsZVJlc3BvbnNlU2VydmVyKGpSZXMsICgpID0+IHsKICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgIHZlcnRpY2FsQWxpZ246ICdib3R0b20nLAogICAgICAgICAgICBob3Jpem9udGFsQWxpZ246ICdjZW50ZXInLAogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgIG1lc3NhZ2U6ICdTYXZlIGpvYiBzdWNjZXNzZnVsbHkhJywKICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgICAgKSB7CiAgICAgICAgdGhpcy5zdWJtaXR0aW5nID0gZmFsc2UKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICB0aGlzLnN1Ym1pdHRpbmcgPSBmYWxzZQogICAgfSwKICAgIGhhbmRsZVJlc3BvbnNlU2VydmVyKHJlcywgZG9TdWNjZXNzID0gbnVsbCwgZG9GYWlsID0gbnVsbCkgewogICAgICBsZXQgc3VjY2VzcyA9IHRydWUKICAgICAgaWYgKHJlcyAmJiByZXMuc3VjY2VzcykgewogICAgICAgIGlmIChkb1N1Y2Nlc3MgIT09IG51bGwpIHsKICAgICAgICAgIGRvU3VjY2VzcyhyZXMpCiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHN1Y2Nlc3MgPSBmYWxzZQogICAgICAgIGxldCBlcnJNc2cgPSAnU29tZXRoaW5nIHdlbnQgd3JvbmcnCiAgICAgICAgaWYgKHJlcyAmJiAhcmVzLnN1Y2Nlc3MgJiYgcmVzLm1lc3NhZ2UpIHsKICAgICAgICAgIGVyck1zZyA9IHJlcy5tZXNzYWdlCiAgICAgICAgfQogICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICB2ZXJ0aWNhbEFsaWduOiAnYm90dG9tJywKICAgICAgICAgIGhvcml6b250YWxBbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICB0eXBlOiAnZGFuZ2VyJywKICAgICAgICAgIG1lc3NhZ2U6IGVyck1zZywKICAgICAgICB9KQogICAgICAgIGlmIChkb0ZhaWwgIT09IG51bGwpIHsKICAgICAgICAgIGRvRmFpbChyZXMpCiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBzdWNjZXNzCiAgICB9LAogICAgb25GaWxlQ2hhbmdlKGZpbGUpIHsKICAgICAgdGhpcy5pbWFnZUZpbGUgPSBmaWxlCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["CreateNew.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateNew.vue","sourceRoot":"src/views/Jobs","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-blue\">\n      <!-- Card stats -->\n    </base-header>\n    <job-detail\n      :job=\"job\"\n      mode=\"create\"\n      ref=\"jobDetail\"\n      v-on:formSubmit=\"createJob\"\n      @imgChange=\"onFileChange\"\n    ></job-detail>\n  </div>\n</template>\n<script>\nimport JobDetail from './component/JobDetail'\nimport { cloneDeep } from '@/core/utils/common'\nimport imageService from '@/api/imageService'\nimport jobService from '@/api/jobService'\nexport default {\n  components: { JobDetail },\n  data() {\n    return {\n      job: {\n        image_url: 'img/theme/img-1-1000x900.jpg',\n        id: 0,\n        name: '',\n        short_description: '',\n        link_video: '',\n        country_code: 'VN',\n        min_degree: 'uni_undergraduate',\n        industry: '',\n        type: 'graduated',\n        application_link: '',\n        reviewed_link: '',\n        open_at: new Date(),\n        close_at: new Date(new Date().setDate(new Date().getDate() + 1)),\n      },\n      imageFile: null,\n      submitting: false,\n    }\n  },\n  methods: {\n    async createJob() {\n      const newJob = cloneDeep(this.job)\n      newJob.open_at = new Date(this.job.open_at.toString()).getTime() / 1000\n      newJob.close_at = new Date(this.job.close_at.toString()).getTime() / 1000\n      // upload image\n      this.submitting = true\n      const res = await imageService.uploadImage(this.imageFile)\n      if (\n        !this.handleResponseServer(res, (res) => {\n          if (res.image) {\n            newJob.image_url = res.image.src\n            newJob.image_id = res.image.id\n          }\n        })\n      ) {\n        this.submitting = false\n        return\n      }\n      const jRes = await jobService.createJob({ job: newJob })\n      if (\n        !this.handleResponseServer(jRes, () => {\n          this.$notify({\n            verticalAlign: 'bottom',\n            horizontalAlign: 'center',\n            type: 'success',\n            message: 'Save job successfully!',\n          })\n        })\n      ) {\n        this.submitting = false\n        return\n      }\n      this.submitting = false\n    },\n    handleResponseServer(res, doSuccess = null, doFail = null) {\n      let success = true\n      if (res && res.success) {\n        if (doSuccess !== null) {\n          doSuccess(res)\n        }\n      } else {\n        success = false\n        let errMsg = 'Something went wrong'\n        if (res && !res.success && res.message) {\n          errMsg = res.message\n        }\n        this.$notify({\n          verticalAlign: 'bottom',\n          horizontalAlign: 'center',\n          type: 'danger',\n          message: errMsg,\n        })\n        if (doFail !== null) {\n          doFail(res)\n        }\n      }\n      return success\n    },\n    onFileChange(file) {\n      this.imageFile = file\n    },\n  },\n}\n</script>\n<style></style>\n"]}]}