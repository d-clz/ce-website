{"remainingRequest":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js!/home/dclz/vivexelt-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/dclz/vivexelt-admin/src/core/helpers/httpErrorHandler.js","dependencies":[{"path":"/home/dclz/vivexelt-admin/src/core/helpers/httpErrorHandler.js","mtime":1620325383198},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js","mtime":1620325525308},{"path":"/home/dclz/vivexelt-admin/node_modules/eslint-loader/index.js","mtime":1620142637801}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9kY2x6L3ZpdmV4ZWx0LWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9kY2x6L3ZpdmV4ZWx0LWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCBFdmVudEJ1cyBmcm9tICdAL2NvcmUvaGVscGVycy9ldmVudCc7CmltcG9ydCB7IEhUVFBfU1RBVFVTX1RPS0VOX0VYUElSRUQsIEhUVFBfU1RBVFVTX1VOQVVUSE9SSVpFRCwgSFRUUF9TVEFUVVNfR09ORSwgSFRUUF9OT1RfQUNDRVBUQUJMRSB9IGZyb20gJ0AvY29yZS9jb25zdGFudHMvaHR0cCc7CmltcG9ydCB7IFRPS0VOX0VYUElSRUQsIFVOQVVUSE9SSVpFRF9SRVFVRVNUIH0gZnJvbSAnQC9jb3JlL2NvbnN0YW50cy9ldmVudCc7Cgp2YXIgaXNXaGl0ZUxpc3RVbmF1dGhvcml6ZWRVcmwgPSBmdW5jdGlvbiBpc1doaXRlTGlzdFVuYXV0aG9yaXplZFVybCh1cmwpIHsKICAvLyBJZiBvY2N1cnMgdW5hdXRob3JpemVkIGVycm9yIHdpdGggdGhlc2UgdXJscy4gSWdub3JlIHRoZW0KICB2YXIgd2hpdGVMaXN0VXJscyA9IFsnYXV0aC9sb2dvdXQnXTsKCiAgaWYgKHVybCkgewogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB3aGl0ZUxpc3RVcmxzLmxlbmd0aDsgaSsrKSB7CiAgICAgIGlmICh1cmwuaW5jbHVkZXMod2hpdGVMaXN0VXJsc1tpXSkpIHJldHVybiB0cnVlOwogICAgfQogIH0KCiAgcmV0dXJuIGZhbHNlOwp9OwoKdmFyIEh0dHBFcnJvckhhbmRsZXIgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBIdHRwRXJyb3JIYW5kbGVyKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEh0dHBFcnJvckhhbmRsZXIpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEh0dHBFcnJvckhhbmRsZXIsIG51bGwsIFt7CiAgICBrZXk6ICJoYW5kbGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZShyZXNwb25zZSkgewogICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSBIVFRQX1NUQVRVU19UT0tFTl9FWFBJUkVEKSB7CiAgICAgICAgRXZlbnRCdXMuJGVtaXQoVE9LRU5fRVhQSVJFRCk7CiAgICAgIH0KCiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IEhUVFBfU1RBVFVTX1VOQVVUSE9SSVpFRCAmJiAhaXNXaGl0ZUxpc3RVbmF1dGhvcml6ZWRVcmwocmVzcG9uc2UudXJsKSkgewogICAgICAgIEV2ZW50QnVzLiRlbWl0KFVOQVVUSE9SSVpFRF9SRVFVRVNUKTsKICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIEh0dHBFcnJvckhhbmRsZXI7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IEh0dHBFcnJvckhhbmRsZXI7"},{"version":3,"sources":["/home/dclz/vivexelt-admin/src/core/helpers/httpErrorHandler.js"],"names":["EventBus","HTTP_STATUS_TOKEN_EXPIRED","HTTP_STATUS_UNAUTHORIZED","HTTP_STATUS_GONE","HTTP_NOT_ACCEPTABLE","TOKEN_EXPIRED","UNAUTHORIZED_REQUEST","isWhiteListUnauthorizedUrl","url","whiteListUrls","i","length","includes","HttpErrorHandler","response","status","$emit"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SACIC,yBADJ,EAEIC,wBAFJ,EAGIC,gBAHJ,EAIIC,mBAJJ,QAKO,uBALP;AAMA,SACIC,aADJ,EAEIC,oBAFJ,QAGO,wBAHP;;AAKA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,GAAD,EAAS;AACxC;AACA,MAAMC,aAAa,GAAG,CAAC,aAAD,CAAtB;;AACA,MAAID,GAAJ,EAAS;AACL,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,aAAa,CAACE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,UAAIF,GAAG,CAACI,QAAJ,CAAaH,aAAa,CAACC,CAAD,CAA1B,CAAJ,EAAoC,OAAO,IAAP;AACvC;AACJ;;AACD,SAAO,KAAP;AACH,CATD;;IAWMG,gB;;;;;;;;;2BACYC,Q,EAAU;AACpB,UAAIA,QAAQ,CAACC,MAAT,KAAoBd,yBAAxB,EAAmD;AAC/CD,QAAAA,QAAQ,CAACgB,KAAT,CAAeX,aAAf;AACH;;AACD,UAAIS,QAAQ,CAACC,MAAT,KAAoBb,wBAApB,IAAgD,CAACK,0BAA0B,CAACO,QAAQ,CAACN,GAAV,CAA/E,EAA+F;AAC3FR,QAAAA,QAAQ,CAACgB,KAAT,CAAeV,oBAAf;AACH;AACJ;;;;;;AAGL,eAAeO,gBAAf","sourcesContent":["import EventBus from '@/core/helpers/event'\nimport {\n    HTTP_STATUS_TOKEN_EXPIRED,\n    HTTP_STATUS_UNAUTHORIZED,\n    HTTP_STATUS_GONE,\n    HTTP_NOT_ACCEPTABLE,\n} from '@/core/constants/http'\nimport {\n    TOKEN_EXPIRED,\n    UNAUTHORIZED_REQUEST,\n} from '@/core/constants/event'\n\nconst isWhiteListUnauthorizedUrl = (url) => {\n    // If occurs unauthorized error with these urls. Ignore them\n    const whiteListUrls = ['auth/logout']\n    if (url) {\n        for (let i = 0; i < whiteListUrls.length; i++) {\n            if (url.includes(whiteListUrls[i])) return true\n        }\n    }\n    return false\n}\n\nclass HttpErrorHandler {\n    static handle(response) {\n        if (response.status === HTTP_STATUS_TOKEN_EXPIRED) {\n            EventBus.$emit(TOKEN_EXPIRED)\n        }\n        if (response.status === HTTP_STATUS_UNAUTHORIZED && !isWhiteListUnauthorizedUrl(response.url)) {\n            EventBus.$emit(UNAUTHORIZED_REQUEST)\n        }\n    }\n}\n\nexport default HttpErrorHandler\n"]}]}