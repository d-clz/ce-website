{"remainingRequest":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js!/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dclz/vivexelt-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dclz/vivexelt-admin/src/views/Jobs/CreateNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dclz/vivexelt-admin/src/views/Jobs/CreateNew.vue","mtime":1620438743778},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js","mtime":1620325525308},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/vue-loader/lib/index.js","mtime":1620325533304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9kY2x6L3ZpdmV4ZWx0LWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgSm9iRGV0YWlsIGZyb20gIi4vY29tcG9uZW50L0pvYkRldGFpbCI7CmltcG9ydCB7IGNsb25lRGVlcCB9IGZyb20gJ0AvY29yZS91dGlscy9jb21tb24nOwppbXBvcnQgaW1hZ2VTZXJ2aWNlIGZyb20gJ0AvYXBpL2ltYWdlU2VydmljZSc7CmltcG9ydCBqb2JTZXJ2aWNlIGZyb20gJ0AvYXBpL2pvYlNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgSm9iRGV0YWlsOiBKb2JEZXRhaWwKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBqb2I6IHsKICAgICAgICBpbWFnZV91cmw6ICdpbWcvdGhlbWUvaW1nLTEtMTAwMHg5MDAuanBnJywKICAgICAgICBpZDogMCwKICAgICAgICBuYW1lOiAnJywKICAgICAgICBzaG9ydF9kZXNjcmlwdGlvbjogJycsCiAgICAgICAgbGlua192aWRlbzogJycsCiAgICAgICAgY291bnRyeV9jb2RlOiAnVk4nLAogICAgICAgIG1pbl9kZWdyZWU6ICd1bmlfdW5kZXJncmFkdWF0ZScsCiAgICAgICAgaW5kdXN0cnk6ICcnLAogICAgICAgIHR5cGU6ICdncmFkdWF0ZWQnLAogICAgICAgIGFwcGxpY2F0aW9uX2xpbms6ICcnLAogICAgICAgIHJldmlld2VkX2xpbms6ICcnLAogICAgICAgIG9wZW5fYXQ6IG5ldyBEYXRlKCksCiAgICAgICAgY2xvc2VfYXQ6IG5ldyBEYXRlKG5ldyBEYXRlKCkuc2V0RGF0ZShuZXcgRGF0ZSgpLmdldERhdGUoKSArIDEpKQogICAgICB9LAogICAgICBpbWFnZUZpbGU6IG51bGwsCiAgICAgIHN1Ym1pdHRpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlSm9iOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfY3JlYXRlSm9iID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgICB2YXIgbmV3Sm9iLCByZXMsIGpSZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgbmV3Sm9iID0gY2xvbmVEZWVwKHRoaXMuam9iKTsKICAgICAgICAgICAgICAgIG5ld0pvYi5vcGVuX2F0ID0gbmV3IERhdGUodGhpcy5qb2Iub3Blbl9hdC50b1N0cmluZygpKS5nZXRUaW1lKCkgLyAxMDAwOwogICAgICAgICAgICAgICAgbmV3Sm9iLmNsb3NlX2F0ID0gbmV3IERhdGUodGhpcy5qb2IuY2xvc2VfYXQudG9TdHJpbmcoKSkuZ2V0VGltZSgpIC8gMTAwMDsgLy8gdXBsb2FkIGltYWdlCgogICAgICAgICAgICAgICAgdGhpcy5zdWJtaXR0aW5nID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIGltYWdlU2VydmljZS51cGxvYWRJbWFnZSh0aGlzLmltYWdlRmlsZSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHRoaXMuaGFuZGxlUmVzcG9uc2VTZXJ2ZXIocmVzLCBmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXMuaW1hZ2UpIHsKICAgICAgICAgICAgICAgICAgICBuZXdKb2IuaW1hZ2VfdXJsID0gcmVzLmltYWdlLnNyYzsKICAgICAgICAgICAgICAgICAgICBuZXdKb2IuaW1hZ2VfaWQgPSByZXMuaW1hZ2UuaWQ7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhpcy5zdWJtaXR0aW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIHJldHVybiBqb2JTZXJ2aWNlLmNyZWF0ZUpvYih7CiAgICAgICAgICAgICAgICAgIGpvYjogbmV3Sm9iCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIGpSZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICh0aGlzLmhhbmRsZVJlc3BvbnNlU2VydmVyKGpSZXMsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICAgICAgdmVydGljYWxBbGlnbjogJ2JvdHRvbScsCiAgICAgICAgICAgICAgICAgICAgaG9yaXpvbnRhbEFsaWduOiAnY2VudGVyJywKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1NhdmUgam9iIHN1Y2Nlc3NmdWxseSEnCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLnN1Ym1pdHRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgdGhpcy5zdWJtaXR0aW5nID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gY3JlYXRlSm9iKCkgewogICAgICAgIHJldHVybiBfY3JlYXRlSm9iLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjcmVhdGVKb2I7CiAgICB9KCksCiAgICBoYW5kbGVSZXNwb25zZVNlcnZlcjogZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2VTZXJ2ZXIocmVzKSB7CiAgICAgIHZhciBkb1N1Y2Nlc3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IG51bGw7CiAgICAgIHZhciBkb0ZhaWwgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IG51bGw7CiAgICAgIHZhciBzdWNjZXNzID0gdHJ1ZTsKCiAgICAgIGlmIChyZXMgJiYgcmVzLnN1Y2Nlc3MpIHsKICAgICAgICBpZiAoZG9TdWNjZXNzICE9PSBudWxsKSB7CiAgICAgICAgICBkb1N1Y2Nlc3MocmVzKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3VjY2VzcyA9IGZhbHNlOwogICAgICAgIHZhciBlcnJNc2cgPSAnU29tZXRoaW5nIHdlbnQgd3JvbmcnOwoKICAgICAgICBpZiAocmVzICYmICFyZXMuc3VjY2VzcyAmJiByZXMubWVzc2FnZSkgewogICAgICAgICAgZXJyTXNnID0gcmVzLm1lc3NhZ2U7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgdmVydGljYWxBbGlnbjogJ2JvdHRvbScsCiAgICAgICAgICBob3Jpem9udGFsQWxpZ246ICdjZW50ZXInLAogICAgICAgICAgdHlwZTogJ2RhbmdlcicsCiAgICAgICAgICBtZXNzYWdlOiBlcnJNc2cKICAgICAgICB9KTsKCiAgICAgICAgaWYgKGRvRmFpbCAhPT0gbnVsbCkgewogICAgICAgICAgZG9GYWlsKHJlcyk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gc3VjY2VzczsKICAgIH0sCiAgICBvbkZpbGVDaGFuZ2U6IGZ1bmN0aW9uIG9uRmlsZUNoYW5nZShmaWxlKSB7CiAgICAgIHRoaXMuaW1hZ2VGaWxlID0gZmlsZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["CreateNew.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-blue\">\n      <!-- Card stats -->\n    </base-header>\n    <job-detail\n      :job=\"job\"\n      mode=\"create\"\n      ref=\"jobDetail\"\n      v-on:formSubmit=\"createJob\"\n      @imgChange=\"onFileChange\"\n    ></job-detail>\n  </div>\n</template>\n<script>\nimport JobDetail from './component/JobDetail'\nimport { cloneDeep } from '@/core/utils/common'\nimport imageService from '@/api/imageService'\nimport jobService from '@/api/jobService'\nexport default {\n  components: { JobDetail },\n  data() {\n    return {\n      job: {\n        image_url: 'img/theme/img-1-1000x900.jpg',\n        id: 0,\n        name: '',\n        short_description: '',\n        link_video: '',\n        country_code: 'VN',\n        min_degree: 'uni_undergraduate',\n        industry: '',\n        type: 'graduated',\n        application_link: '',\n        reviewed_link: '',\n        open_at: new Date(),\n        close_at: new Date(new Date().setDate(new Date().getDate() + 1)),\n      },\n      imageFile: null,\n      submitting: false,\n    }\n  },\n  methods: {\n    async createJob() {\n      const newJob = cloneDeep(this.job)\n      newJob.open_at = new Date(this.job.open_at.toString()).getTime() / 1000\n      newJob.close_at = new Date(this.job.close_at.toString()).getTime() / 1000\n      // upload image\n      this.submitting = true\n      const res = await imageService.uploadImage(this.imageFile)\n      if (\n        !this.handleResponseServer(res, (res) => {\n          if (res.image) {\n            newJob.image_url = res.image.src\n            newJob.image_id = res.image.id\n          }\n        })\n      ) {\n        this.submitting = false\n        return\n      }\n      const jRes = await jobService.createJob({ job: newJob })\n      if (\n        !this.handleResponseServer(jRes, () => {\n          this.$notify({\n            verticalAlign: 'bottom',\n            horizontalAlign: 'center',\n            type: 'success',\n            message: 'Save job successfully!',\n          })\n        })\n      ) {\n        this.submitting = false\n        return\n      }\n      this.submitting = false\n    },\n    handleResponseServer(res, doSuccess = null, doFail = null) {\n      let success = true\n      if (res && res.success) {\n        if (doSuccess !== null) {\n          doSuccess(res)\n        }\n      } else {\n        success = false\n        let errMsg = 'Something went wrong'\n        if (res && !res.success && res.message) {\n          errMsg = res.message\n        }\n        this.$notify({\n          verticalAlign: 'bottom',\n          horizontalAlign: 'center',\n          type: 'danger',\n          message: errMsg,\n        })\n        if (doFail !== null) {\n          doFail(res)\n        }\n      }\n      return success\n    },\n    onFileChange(file) {\n      this.imageFile = file\n    },\n  },\n}\n</script>\n<style></style>\n"],"sourceRoot":"src/views/Jobs"}]}