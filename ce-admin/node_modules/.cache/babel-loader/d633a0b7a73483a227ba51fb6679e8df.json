{"remainingRequest":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js!/home/dclz/vivexelt-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/dclz/vivexelt-admin/src/store/modules/auth.js","dependencies":[{"path":"/home/dclz/vivexelt-admin/src/store/modules/auth.js","mtime":1620325383198},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js","mtime":1620325525308},{"path":"/home/dclz/vivexelt-admin/node_modules/eslint-loader/index.js","mtime":1620142637801}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvZGNsei92aXZleGVsdC1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IEF1dGhTZXJ2aWNlIGZyb20gJ0AvY29yZS9zZXJ2aWNlcy9hdXRoJzsKaW1wb3J0IGxvZ2luU2VydmljZSBmcm9tICdAL2FwaS9sb2dpblNlcnZpY2UnOyAvLyBpbml0aWFsIHN0YXRlCgp2YXIgc3RhdGUgPSBmdW5jdGlvbiBzdGF0ZSgpIHsKICByZXR1cm4gewogICAgYWxsOiBbXQogIH07Cn07IC8vIGdldHRlcnMKCgp2YXIgZ2V0dGVycyA9IHt9OyAvLyBtdXRhdGlvbnMKCnZhciBtdXRhdGlvbnMgPSB7fTsKdmFyIGFjdGlvbnMgPSB7CiAgLyoqCiAgICogSW5pdAogICAqIEBwYXJhbSBjb21taXQKICAgKi8KICBpbml0OiBmdW5jdGlvbiBpbml0KF9yZWYpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIEF1dGhTZXJ2aWNlLmluaXQoKTsKCiAgICBpZiAoQXV0aFNlcnZpY2UuaXNBdXRoZW50aWNhdGVkKCkpIHsKICAgICAgZGlzcGF0Y2hBdXRoZW50aWNhdGUoY29tbWl0LCBPYmplY3QuYXNzaWduKHt9LCBBdXRoU2VydmljZS51c2VyKSk7CiAgICB9CiAgfSwKCiAgLyoqCiAgICogU2lnbiBpbgogICAqIEBwYXJhbSBjb21taXQKICAgKiBAcGFyYW0gaXNQYXJ0bmVyCiAgICogQHBhcmFtIHBheWxvYWQKICAgKiBAcmV0dXJucyB7UHJvbWlzZTx7c3VjY2VzczogYm9vbGVhbn0+fQogICAqLwogIHNpZ25JbjogZnVuY3Rpb24gKCkgewogICAgdmFyIF9zaWduSW4gPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgIC8qI19fUFVSRV9fKi8KICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZjIsIHBheWxvYWQpIHsKICAgICAgdmFyIGNvbW1pdCwgZW1haWwsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIGVtYWlsID0gcGF5bG9hZC51c2VybmFtZTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gbG9naW5TZXJ2aWNlLnNpZ25JbihwYXlsb2FkKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHJlc3BvbnNlICYmIHJlc3BvbnNlLnN1Y2Nlc3MpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgZGlzcGF0Y2hBdXRoZW50aWNhdGUoY29tbWl0LCB0cmFuc2Zvcm1lckF1dGhlbnRpY2F0ZShPYmplY3QuYXNzaWduKHsKICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbAogICAgICAgICAgICAgIH0sIHJlc3BvbnNlKSkpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsCiAgICAgICAgICAgICAgICB1c2VyOiB0cmFuc2Zvcm1lckF1dGhlbnRpY2F0ZShPYmplY3QuYXNzaWduKHsKICAgICAgICAgICAgICAgICAgZW1haWw6IGVtYWlsCiAgICAgICAgICAgICAgICB9LCByZXNwb25zZSkpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBzaWduSW4oX3gsIF94MikgewogICAgICByZXR1cm4gX3NpZ25Jbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBzaWduSW47CiAgfSgpLAogIHNpZ25PdXQ6IGZ1bmN0aW9uIHNpZ25PdXQocGF5bG9hZCkgewogICAgZGlzcGF0Y2hBdXRoZW50aWNhdGUoe30pOwogICAgcmV0dXJuIHsKICAgICAgc3VjY2VzczogdHJ1ZQogICAgfTsKICB9Cn07Cgp2YXIgZGlzcGF0Y2hBdXRoZW50aWNhdGUgPSBmdW5jdGlvbiBkaXNwYXRjaEF1dGhlbnRpY2F0ZShjb21taXQsIHBheWxvYWQpIHsKICBBdXRoU2VydmljZS5zZXQocGF5bG9hZCk7Cn07Cgp2YXIgdHJhbnNmb3JtZXJBdXRoZW50aWNhdGUgPSBmdW5jdGlvbiB0cmFuc2Zvcm1lckF1dGhlbnRpY2F0ZShyZXNwb25zZSkgewogIHJldHVybiB7CiAgICBpZDogcmVzcG9uc2UudXNlcl9pZCwKICAgIGFjY2Vzc1Rva2VuOiByZXNwb25zZS50b2tlbiwKICAgIGVtYWlsOiByZXNwb25zZS5lbWFpbCwKICAgIGZpcnN0X25hbWU6IHJlc3BvbnNlLmZpcnN0X25hbWUsCiAgICBsYXN0X25hbWU6IHJlc3BvbnNlLmxhc3RfbmFtZQogIH07Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/dclz/vivexelt-admin/src/store/modules/auth.js"],"names":["AuthService","loginService","state","all","getters","mutations","actions","init","commit","isAuthenticated","dispatchAuthenticate","Object","assign","user","signIn","payload","email","username","response","success","transformerAuthenticate","signOut","set","id","user_id","accessToken","token","first_name","last_name","namespaced"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB,C,CAEA;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAO;AACjBC,IAAAA,GAAG,EAAE;AADY,GAAP;AAAA,CAAd,C,CAIA;;;AACA,IAAMC,OAAO,GAAG,EAAhB,C,CAEA;;AACA,IAAMC,SAAS,GAAG,EAAlB;AAGA,IAAMC,OAAO,GAAG;AACZ;;;;AAIAC,EAAAA,IALY,sBAKK;AAAA,QAAVC,MAAU,QAAVA,MAAU;AACbR,IAAAA,WAAW,CAACO,IAAZ;;AAEA,QAAIP,WAAW,CAACS,eAAZ,EAAJ,EAAmC;AAC/BC,MAAAA,oBAAoB,CAACF,MAAD,EAASG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,WAAW,CAACa,IAA9B,CAAT,CAApB;AACH;AACJ,GAXW;;AAYZ;;;;;;;AAOMC,EAAAA,MAnBM;AAAA;AAAA;AAAA,oDAmBaC,OAnBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBGP,cAAAA,MAnBH,SAmBGA,MAnBH;AAoBJQ,cAAAA,KApBI,GAoBID,OAAO,CAACE,QApBZ;AAAA;AAAA,qBAqBahB,YAAY,CAACa,MAAb,CAAoBC,OAApB,CArBb;;AAAA;AAqBJG,cAAAA,QArBI;;AAAA,oBAuBJA,QAAQ,IAAIA,QAAQ,CAACC,OAvBjB;AAAA;AAAA;AAAA;;AAwBJT,cAAAA,oBAAoB,CAChBF,MADgB,EAEhBY,uBAAuB,CAACT,MAAM,CAACC,MAAP,CAAc;AAAEI,gBAAAA,KAAK,EAAEA;AAAT,eAAd,EAAgCE,QAAhC,CAAD,CAFP,CAApB;AAxBI,+CA6BG;AACHC,gBAAAA,OAAO,EAAE,IADN;AAEHN,gBAAAA,IAAI,EAAEO,uBAAuB,CAACT,MAAM,CAACC,MAAP,CAAc;AAAEI,kBAAAA,KAAK,EAAEA;AAAT,iBAAd,EAAgCE,QAAhC,CAAD;AAF1B,eA7BH;;AAAA;AAAA,+CAmCDA,QAnCC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsCZG,EAAAA,OAtCY,mBAsCJN,OAtCI,EAsCK;AACbL,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACA,WAAO;AACHS,MAAAA,OAAO,EAAE;AADN,KAAP;AAGH;AA3CW,CAAhB;;AA8CA,IAAMT,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACF,MAAD,EAASO,OAAT,EAAqB;AAC9Cf,EAAAA,WAAW,CAACsB,GAAZ,CAAgBP,OAAhB;AACH,CAFD;;AAIA,IAAMK,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACF,QAAD,EAAc;AAC1C,SAAO;AACHK,IAAAA,EAAE,EAAEL,QAAQ,CAACM,OADV;AAEHC,IAAAA,WAAW,EAAEP,QAAQ,CAACQ,KAFnB;AAGHV,IAAAA,KAAK,EAAEE,QAAQ,CAACF,KAHb;AAIHW,IAAAA,UAAU,EAAET,QAAQ,CAACS,UAJlB;AAKHC,IAAAA,SAAS,EAAEV,QAAQ,CAACU;AALjB,GAAP;AAOH,CARD;;AAUA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEX3B,EAAAA,KAAK,EAALA,KAFW;AAGXE,EAAAA,OAAO,EAAPA,OAHW;AAIXE,EAAAA,OAAO,EAAPA,OAJW;AAKXD,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["import AuthService from '@/core/services/auth'\nimport loginService from '@/api/loginService'\n\n// initial state\nconst state = () => ({\n    all: []\n});\n\n// getters\nconst getters = {};\n\n// mutations\nconst mutations = {};\n\n\nconst actions = {\n    /**\n     * Init\n     * @param commit\n     */\n    init({ commit }) {\n        AuthService.init()\n\n        if (AuthService.isAuthenticated()) {\n            dispatchAuthenticate(commit, Object.assign({}, AuthService.user))\n        }\n    },\n    /**\n     * Sign in\n     * @param commit\n     * @param isPartner\n     * @param payload\n     * @returns {Promise<{success: boolean}>}\n     */\n    async signIn({ commit }, payload) {\n        let email = payload.username\n        let response = await loginService.signIn(payload)\n\n        if (response && response.success) {\n            dispatchAuthenticate(\n                commit,\n                transformerAuthenticate(Object.assign({ email: email }, response))\n            )\n\n            return {\n                success: true,\n                user: transformerAuthenticate(Object.assign({ email: email }, response)),\n            }\n        }\n\n        return response\n    },\n\n    signOut(payload) {\n        dispatchAuthenticate({})\n        return {\n            success: true,\n        }\n    },\n}\n\nconst dispatchAuthenticate = (commit, payload) => {\n    AuthService.set(payload)\n}\n\nconst transformerAuthenticate = (response) => {\n    return {\n        id: response.user_id,\n        accessToken: response.token,\n        email: response.email,\n        first_name: response.first_name,\n        last_name: response.last_name,\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n};\n"]}]}