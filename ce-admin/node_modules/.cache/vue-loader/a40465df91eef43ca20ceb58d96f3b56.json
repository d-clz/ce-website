{"remainingRequest":"/home/dclz/vivexelt-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dclz/vivexelt-admin/src/components/Inputs/BaseTextArea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dclz/vivexelt-admin/src/components/Inputs/BaseTextArea.vue","mtime":1620325383194},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js","mtime":1620325525308},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/vue-loader/lib/index.js","mtime":1620325533304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBpbmhlcml0QXR0cnM6IGZhbHNlLAogIG5hbWU6ICdiYXNlLXRleHRhcmVhJywKICBwcm9wczogewogICAgcm93czogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDIsCiAgICB9LAogICAgcmVxdWlyZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVzY3JpcHRpb246ICdXaGV0aGVyIGlucHV0IGlzIHJlcXVpcmVkIChhZGRzIGFuIGFzdGVyaXggKiknLAogICAgfSwKICAgIGdyb3VwOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlc2NyaXB0aW9uOiAnV2hldGhlciBpbnB1dCBpcyBhbiBpbnB1dCBncm91cCAobWFudWFsIG92ZXJyaWRlIGluIHNwZWNpYWwgY2FzZXMpJywKICAgIH0sCiAgICBhbHRlcm5hdGl2ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZXNjcmlwdGlvbjogJ1doZXRoZXIgaW5wdXQgaXMgb2YgYWx0ZXJuYXRpdmUgbGF5b3V0JywKICAgIH0sCiAgICBsYWJlbDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlc2NyaXB0aW9uOiAnSW5wdXQgbGFiZWwgKHRleHQgYmVmb3JlIGlucHV0KScsCiAgICB9LAogICAgZXJyb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogJ0lucHV0IGVycm9yIChiZWxvdyBpbnB1dCknLAogICAgfSwKICAgIHN1Y2Nlc3NNZXNzYWdlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVzY3JpcHRpb246ICdJbnB1dCBzdWNjZXNzIG1lc3NhZ2UnLAogICAgICBkZWZhdWx0OiAnJywKICAgIH0sCiAgICBsYWJlbENsYXNzZXM6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogJ0lucHV0IGxhYmVsIGNzcyBjbGFzc2VzJywKICAgICAgZGVmYXVsdDogJ2Zvcm0tY29udHJvbC1sYWJlbCcsCiAgICB9LAogICAgaW5wdXRDbGFzc2VzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVzY3JpcHRpb246ICdJbnB1dCBjc3MgY2xhc3NlcycsCiAgICB9LAogICAgaW5wdXRHcm91cENsYXNzZXM6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogJ0lucHV0IGdyb3VwIGNzcyBjbGFzc2VzJywKICAgIH0sCiAgICB2YWx1ZTogewogICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLAogICAgICBkZXNjcmlwdGlvbjogJ0lucHV0IHZhbHVlJywKICAgIH0sCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVzY3JpcHRpb246ICdJbnB1dCB0eXBlJywKICAgICAgZGVmYXVsdDogJ3RleHQnLAogICAgfSwKICAgIGFwcGVuZEljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogJ0FwcGVuZCBpY29uIChyaWdodCknLAogICAgfSwKICAgIHByZXBlbmRJY29uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVzY3JpcHRpb246ICdQcmVwZW5kIGljb24gKGxlZnQpJywKICAgIH0sCiAgICBydWxlczogewogICAgICB0eXBlOiBbU3RyaW5nLCBBcnJheSwgT2JqZWN0XSwKICAgICAgZGVzY3JpcHRpb246ICdWZWUgdmFsaWRhdGUgdmFsaWRhdGlvbiBydWxlcycsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKICAgIG5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogJ0lucHV0IG5hbWUgKHVzZWQgZm9yIHZhbGlkYXRpb24pJywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvY3VzZWQ6IGZhbHNlLAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGxpc3RlbmVycygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAuLi50aGlzLiRsaXN0ZW5lcnMsCiAgICAgICAgaW5wdXQ6IHRoaXMudXBkYXRlVmFsdWUsCiAgICAgICAgZm9jdXM6IHRoaXMub25Gb2N1cywKICAgICAgICBibHVyOiB0aGlzLm9uQmx1ciwKICAgICAgfQogICAgfSwKICAgIHNsb3REYXRhKCkgewogICAgICByZXR1cm4gewogICAgICAgIGZvY3VzZWQ6IHRoaXMuZm9jdXNlZCwKICAgICAgICBlcnJvcjogdGhpcy5lcnJvciwKICAgICAgICAuLi50aGlzLmxpc3RlbmVycywKICAgICAgfQogICAgfSwKICAgIGhhc0ljb24oKSB7CiAgICAgIGNvbnN0IHsgYXBwZW5kLCBwcmVwZW5kIH0gPSB0aGlzLiRzbG90cwogICAgICByZXR1cm4gKAogICAgICAgIGFwcGVuZCAhPT0gdW5kZWZpbmVkIHx8CiAgICAgICAgcHJlcGVuZCAhPT0gdW5kZWZpbmVkIHx8CiAgICAgICAgdGhpcy5hcHBlbmRJY29uICE9PSB1bmRlZmluZWQgfHwKICAgICAgICB0aGlzLnByZXBlbmRJY29uICE9PSB1bmRlZmluZWQgfHwKICAgICAgICB0aGlzLmdyb3VwCiAgICAgICkKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVWYWx1ZSh2YWx1ZSkgewogICAgICBsZXQgdiA9IHZhbHVlCiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdikKICAgIH0sCiAgICBvbkZvY3VzKGV2dCkgewogICAgICB0aGlzLmZvY3VzZWQgPSB0cnVlCiAgICAgIHRoaXMuJGVtaXQoJ2ZvY3VzJywgZXZ0KQogICAgfSwKICAgIG9uQmx1cihldnQpIHsKICAgICAgdGhpcy5mb2N1c2VkID0gZmFsc2UKICAgICAgdGhpcy4kZW1pdCgnYmx1cicsIGV2dCkKICAgIH0sCiAgICB2YWxpZGF0ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnNbJ3ZhbGlkYXRvciddLnZhbGlkYXRlKCkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["BaseTextArea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"BaseTextArea.vue","sourceRoot":"src/components/Inputs","sourcesContent":["<template>\n  <validation-provider\n    :rules=\"rules\"\n    ref=\"validator\"\n    :name=\"name\"\n    v-bind=\"$attrs\"\n    v-slot=\"{ errors, valid, invalid, validated }\"\n  >\n    <b-form-group>\n      <slot name=\"label\">\n        <label v-if=\"label\" :class=\"labelClasses\">\n          {{ label }}\n        </label>\n      </slot>\n      <div\n        :class=\"[\n          { 'input-group': hasIcon },\n          { focused: focused },\n          { 'input-group-alternative': alternative },\n          { 'has-label': label || $slots.label },\n          inputGroupClasses,\n        ]\"\n      >\n        <div v-if=\"prependIcon || $slots.prepend\" class=\"input-group-prepend\">\n          <span class=\"input-group-text\">\n            <slot name=\"prepend\">\n              <i :class=\"prependIcon\"></i>\n            </slot>\n          </span>\n        </div>\n        <slot v-bind=\"slotData\">\n          <b-form-textarea\n            :rows=\"rows\"\n            :value=\"value\"\n            v-on=\"listeners\"\n            v-bind=\"$attrs\"\n            :valid=\"valid\"\n            class=\"form-control\"\n            :class=\"[\n              { 'is-valid': valid && validated && successMessage },\n              { 'is-invalid': invalid && validated },\n              inputClasses,\n            ]\"\n          ></b-form-textarea>\n        </slot>\n        <div v-if=\"appendIcon || $slots.append\" class=\"input-group-append\">\n          <span class=\"input-group-text\">\n            <slot name=\"append\">\n              <i :class=\"appendIcon\"></i>\n            </slot>\n          </span>\n        </div>\n        <slot name=\"infoBlock\"></slot>\n      </div>\n      <slot name=\"success\">\n        <div class=\"valid-feedback\" v-if=\"valid && validated && successMessage\">\n          {{ successMessage }}\n        </div>\n      </slot>\n      <slot name=\"error\">\n        <div v-if=\"errors[0]\" class=\"invalid-feedback\" style=\"display: block;\">\n          {{ errors[0] }}\n        </div>\n      </slot>\n    </b-form-group>\n  </validation-provider>\n</template>\n<script>\nexport default {\n  inheritAttrs: false,\n  name: 'base-textarea',\n  props: {\n    rows: {\n      type: Number,\n      default: 2,\n    },\n    required: {\n      type: Boolean,\n      description: 'Whether input is required (adds an asterix *)',\n    },\n    group: {\n      type: Boolean,\n      description: 'Whether input is an input group (manual override in special cases)',\n    },\n    alternative: {\n      type: Boolean,\n      description: 'Whether input is of alternative layout',\n    },\n    label: {\n      type: String,\n      description: 'Input label (text before input)',\n    },\n    error: {\n      type: String,\n      description: 'Input error (below input)',\n    },\n    successMessage: {\n      type: String,\n      description: 'Input success message',\n      default: '',\n    },\n    labelClasses: {\n      type: String,\n      description: 'Input label css classes',\n      default: 'form-control-label',\n    },\n    inputClasses: {\n      type: String,\n      description: 'Input css classes',\n    },\n    inputGroupClasses: {\n      type: String,\n      description: 'Input group css classes',\n    },\n    value: {\n      type: [String, Number],\n      description: 'Input value',\n    },\n    type: {\n      type: String,\n      description: 'Input type',\n      default: 'text',\n    },\n    appendIcon: {\n      type: String,\n      description: 'Append icon (right)',\n    },\n    prependIcon: {\n      type: String,\n      description: 'Prepend icon (left)',\n    },\n    rules: {\n      type: [String, Array, Object],\n      description: 'Vee validate validation rules',\n      default: '',\n    },\n    name: {\n      type: String,\n      description: 'Input name (used for validation)',\n      default: '',\n    },\n  },\n  data() {\n    return {\n      focused: false,\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.updateValue,\n        focus: this.onFocus,\n        blur: this.onBlur,\n      }\n    },\n    slotData() {\n      return {\n        focused: this.focused,\n        error: this.error,\n        ...this.listeners,\n      }\n    },\n    hasIcon() {\n      const { append, prepend } = this.$slots\n      return (\n        append !== undefined ||\n        prepend !== undefined ||\n        this.appendIcon !== undefined ||\n        this.prependIcon !== undefined ||\n        this.group\n      )\n    },\n  },\n  methods: {\n    updateValue(value) {\n      let v = value\n      this.$emit('input', v)\n    },\n    onFocus(evt) {\n      this.focused = true\n      this.$emit('focus', evt)\n    },\n    onBlur(evt) {\n      this.focused = false\n      this.$emit('blur', evt)\n    },\n    validate() {\n      return this.$refs['validator'].validate()\n    },\n  },\n}\n</script>\n<style></style>\n"]}]}