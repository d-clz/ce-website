{"remainingRequest":"/home/dclz/vivexelt/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dclz/vivexelt/src/components/Navbar/Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dclz/vivexelt/src/components/Navbar/Navbar.vue","mtime":1620142312194},{"path":"/home/dclz/vivexelt/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt/node_modules/babel-loader/lib/index.js","mtime":1620142631685},{"path":"/home/dclz/vivexelt/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt/node_modules/vue-loader/lib/index.js","mtime":1620142639126}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZiYXJUb2dnbGVCdXR0b24gZnJvbSAnLi9OYXZiYXJUb2dnbGVCdXR0b24nOwpsZXQgcmVzaXplVGltZW91dDsKZnVuY3Rpb24gcmVzaXplVGhyb3R0bGVyKGFjdHVhbFJlc2l6ZUhhbmRsZXIpIHsKICAvLyBpZ25vcmUgcmVzaXplIGV2ZW50cyBhcyBsb25nIGFzIGFuIGFjdHVhbFJlc2l6ZUhhbmRsZXIgZXhlY3V0aW9uIGlzIGluIHRoZSBxdWV1ZQogIGlmICghcmVzaXplVGltZW91dCkgewogICAgcmVzaXplVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICByZXNpemVUaW1lb3V0ID0gbnVsbDsKICAgICAgYWN0dWFsUmVzaXplSGFuZGxlcigpOwoKICAgICAgLy8gVGhlIGFjdHVhbFJlc2l6ZUhhbmRsZXIgd2lsbCBleGVjdXRlIGF0IGEgcmF0ZSBvZiAxNWZwcwogICAgfSwgNjYpOwogIH0KfQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICduYXZiYXInLAogIHByb3BzOiB7CiAgICB0cmFuc3BhcmVudDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHBvc2l0aW9uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3JlbGF0aXZlJwogICAgfSwKICAgIG1lbnVDbGFzc2VzOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE9iamVjdCwgQXJyYXldCiAgICB9LAogICAgY29sb3JPblNjcm9sbDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3doaXRlJywKICAgICAgdmFsaWRhdG9yKHZhbHVlKSB7CiAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICd3aGl0ZScsCiAgICAgICAgICAnZGVmYXVsdCcsCiAgICAgICAgICAncHJpbWFyeScsCiAgICAgICAgICAnZGFuZ2VyJywKICAgICAgICAgICdzdWNjZXNzJywKICAgICAgICAgICd3YXJuaW5nJywKICAgICAgICAgICdpbmZvJwogICAgICAgIF0uaW5jbHVkZXModmFsdWUpOwogICAgICB9CiAgICB9LAogICAgbmF2TWVudUNsYXNzZXM6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIG1lbnVJbWFnZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBleHBhbmQ6IHsKICAgICAgdHlwZTogW1N0cmluZywgQm9vbGVhbl0sCiAgICAgIGRlZmF1bHQ6ICdsZycKICAgIH0KICB9LAogIHByb3ZpZGUoKSB7CiAgICByZXR1cm4gewogICAgICBjbG9zZU5hdmJhcjogdGhpcy5jbG9zZQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE5hdmJhclRvZ2dsZUJ1dHRvbgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3dNZW51OiBmYWxzZSwKICAgICAgZXh0cmFOYXZDbGFzc2VzOiAnJywKICAgICAgY3VycmVudFNjcm9sbFZhbHVlOiAwCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHNsb3REYXRhKCkgewogICAgICByZXR1cm4gewogICAgICAgIHRvZ2dsZTogdGhpcy50b2dnbGUsCiAgICAgICAgb3BlbjogdGhpcy5vcGVuLAogICAgICAgIGNsb3NlOiB0aGlzLmNsb3NlLAogICAgICAgIGlzVG9nZ2xlZDogdGhpcy5zaG93TWVudQogICAgICB9OwogICAgfSwKICAgIGNsYXNzZXMoKSB7CiAgICAgIGxldCBjb2xvciA9IGBiZy0ke3RoaXMudHlwZX1gOwogICAgICBsZXQgbmF2UG9zaXRpb24gPSBgbmF2YmFyLSR7dGhpcy5wb3NpdGlvbn1gOwogICAgICBsZXQgY29sb3JPblNjcm9sbFRyYW5zcGFyZW50ID0KICAgICAgICB0aGlzLmNvbG9yT25TY3JvbGwgJiYgdGhpcy5jdXJyZW50U2Nyb2xsVmFsdWUgPCB0aGlzLmNvbG9yT25TY3JvbGw7CgogICAgICBpZiAodGhpcy5wb3NpdGlvbiA9PT0gJ2ZpeGVkJykgewogICAgICAgIG5hdlBvc2l0aW9uID0gJ2ZpeGVkLXRvcCc7CiAgICAgIH0KCiAgICAgIHJldHVybiBbCiAgICAgICAgeyAnbmF2YmFyLXRyYW5zcGFyZW50JzogdGhpcy50cmFuc3BhcmVudCB8fCBjb2xvck9uU2Nyb2xsVHJhbnNwYXJlbnQgfSwKICAgICAgICB7IFtjb2xvcl06ICF0aGlzLnRyYW5zcGFyZW50ICYmIHRoaXMuY29sb3JPblNjcm9sbCA9PT0gMCB9LAogICAgICAgIHRoaXMuZXhwYW5kID8gYG5hdmJhci1leHBhbmQtJHt0aGlzLmV4cGFuZH1gIDogJycsCiAgICAgICAgbmF2UG9zaXRpb24sCiAgICAgICAgdGhpcy5leHRyYU5hdkNsYXNzZXMKICAgICAgXTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNldE5hdih2YWx1ZSkgewogICAgICBsZXQgaHRtbENsYXNzZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdodG1sJykuY2xhc3NMaXN0OwogICAgICBpZiAodmFsdWUpIHsKICAgICAgICBodG1sQ2xhc3Nlcy5hZGQoJ25hdi1vcGVuJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaHRtbENsYXNzZXMucmVtb3ZlKCduYXYtb3BlbicpOwogICAgICB9CiAgICAgIGxldCBpc09wZW4gPSBodG1sQ2xhc3Nlcy5jb250YWlucygnbmF2LW9wZW4nKTsKICAgICAgbGV0IGV2ZW50VG9UcmlnZ2VyID0gaXNPcGVuID8gJ29wZW4nIDogJ2Nsb3NlJzsKICAgICAgdGhpcy5zaG93TWVudSA9IGlzT3BlbjsKICAgICAgdGhpcy4kZW1pdChldmVudFRvVHJpZ2dlcik7CiAgICB9LAogICAgdG9nZ2xlKCkgewogICAgICB0aGlzLnNldE5hdighdGhpcy5zaG93TWVudSk7CiAgICB9LAogICAgb3BlbigpIHsKICAgICAgdGhpcy5zZXROYXYodHJ1ZSk7CiAgICB9LAogICAgY2xvc2UoKSB7CiAgICAgIGlmICh0aGlzLnNob3dNZW51KSB7CiAgICAgICAgdGhpcy5zZXROYXYoZmFsc2UpOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlU2Nyb2xsKCkgewogICAgICBsZXQgc2Nyb2xsVmFsdWUgPQogICAgICAgIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A7CiAgICAgIHRoaXMuY3VycmVudFNjcm9sbFZhbHVlID0gc2Nyb2xsVmFsdWU7CiAgICAgIGlmICh0aGlzLmNvbG9yT25TY3JvbGwgPiAwICYmIHNjcm9sbFZhbHVlID4gdGhpcy5jb2xvck9uU2Nyb2xsKSB7CiAgICAgICAgdGhpcy5leHRyYU5hdkNsYXNzZXMgPSBgYmctJHt0aGlzLnR5cGV9YDsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodGhpcy5leHRyYU5hdkNsYXNzZXMpIHsKICAgICAgICAgIHRoaXMuZXh0cmFOYXZDbGFzc2VzID0gJyc7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgc2Nyb2xsTGlzdGVuZXIoKSB7CiAgICAgIHJlc2l6ZVRocm90dGxlcih0aGlzLmhhbmRsZVNjcm9sbCk7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuc2Nyb2xsTGlzdGVuZXIpOwogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuc2Nyb2xsTGlzdGVuZXIpOwogIH0KfTsK"},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Navbar.vue","sourceRoot":"src/components/Navbar","sourcesContent":["<template>\n  <nav :class=\"classes\" class=\"navbar\">\n    <div class=\"container\">\n      <div class=\"navbar-translate\">\n        <slot v-bind=\"slotData\"></slot>\n        <navbar-toggle-button\n          :toggled=\"showMenu\"\n          @click.native.stop=\"toggle\"\n        ></navbar-toggle-button>\n      </div>\n      <div\n        class=\"navbar-collapse collapse\"\n        v-click-outside=\"close\"\n        :style=\"menuImage ? `background: url(${menuImage}) 0% 0% / cover;` : ''\"\n        :class=\"[\n          { show: showMenu },\n          { 'has-image': menuImage },\n          navMenuClasses\n        ]\"\n        v-if=\"$slots['navbar-menu'] || $scopedSlots['navbar-menu']\"\n        data-color=\"orange\"\n        id=\"navigation\"\n      >\n        <slot name=\"before-menu\"></slot>\n        <ul class=\"navbar-nav\" :class=\"menuClasses\">\n          <slot name=\"navbar-menu\" v-bind=\"slotData\"></slot>\n        </ul>\n        <slot name=\"after-menu\"></slot>\n      </div>\n    </div>\n  </nav>\n</template>\n<script>\nimport NavbarToggleButton from './NavbarToggleButton';\nlet resizeTimeout;\nfunction resizeThrottler(actualResizeHandler) {\n  // ignore resize events as long as an actualResizeHandler execution is in the queue\n  if (!resizeTimeout) {\n    resizeTimeout = setTimeout(() => {\n      resizeTimeout = null;\n      actualResizeHandler();\n\n      // The actualResizeHandler will execute at a rate of 15fps\n    }, 66);\n  }\n}\n\nexport default {\n  name: 'navbar',\n  props: {\n    transparent: {\n      type: Boolean,\n      default: false\n    },\n    position: {\n      type: String,\n      default: 'relative'\n    },\n    menuClasses: {\n      type: [String, Object, Array]\n    },\n    colorOnScroll: {\n      type: Number,\n      default: 0\n    },\n    type: {\n      type: String,\n      default: 'white',\n      validator(value) {\n        return [\n          'white',\n          'default',\n          'primary',\n          'danger',\n          'success',\n          'warning',\n          'info'\n        ].includes(value);\n      }\n    },\n    navMenuClasses: {\n      type: String,\n      default: ''\n    },\n    menuImage: {\n      type: String\n    },\n    expand: {\n      type: [String, Boolean],\n      default: 'lg'\n    }\n  },\n  provide() {\n    return {\n      closeNavbar: this.close\n    };\n  },\n  components: {\n    NavbarToggleButton\n  },\n  data() {\n    return {\n      showMenu: false,\n      extraNavClasses: '',\n      currentScrollValue: 0\n    };\n  },\n  computed: {\n    slotData() {\n      return {\n        toggle: this.toggle,\n        open: this.open,\n        close: this.close,\n        isToggled: this.showMenu\n      };\n    },\n    classes() {\n      let color = `bg-${this.type}`;\n      let navPosition = `navbar-${this.position}`;\n      let colorOnScrollTransparent =\n        this.colorOnScroll && this.currentScrollValue < this.colorOnScroll;\n\n      if (this.position === 'fixed') {\n        navPosition = 'fixed-top';\n      }\n\n      return [\n        { 'navbar-transparent': this.transparent || colorOnScrollTransparent },\n        { [color]: !this.transparent && this.colorOnScroll === 0 },\n        this.expand ? `navbar-expand-${this.expand}` : '',\n        navPosition,\n        this.extraNavClasses\n      ];\n    }\n  },\n  methods: {\n    setNav(value) {\n      let htmlClasses = document.querySelector('html').classList;\n      if (value) {\n        htmlClasses.add('nav-open');\n      } else {\n        htmlClasses.remove('nav-open');\n      }\n      let isOpen = htmlClasses.contains('nav-open');\n      let eventToTrigger = isOpen ? 'open' : 'close';\n      this.showMenu = isOpen;\n      this.$emit(eventToTrigger);\n    },\n    toggle() {\n      this.setNav(!this.showMenu);\n    },\n    open() {\n      this.setNav(true);\n    },\n    close() {\n      if (this.showMenu) {\n        this.setNav(false);\n      }\n    },\n    handleScroll() {\n      let scrollValue =\n        document.body.scrollTop || document.documentElement.scrollTop;\n      this.currentScrollValue = scrollValue;\n      if (this.colorOnScroll > 0 && scrollValue > this.colorOnScroll) {\n        this.extraNavClasses = `bg-${this.type}`;\n      } else {\n        if (this.extraNavClasses) {\n          this.extraNavClasses = '';\n        }\n      }\n    },\n    scrollListener() {\n      resizeThrottler(this.handleScroll);\n    },\n  },\n  mounted() {\n    document.addEventListener('scroll', this.scrollListener);\n  },\n  beforeDestroy() {\n    document.removeEventListener('scroll', this.scrollListener);\n  }\n};\n</script>\n<style></style>\n"]}]}