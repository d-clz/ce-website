{"remainingRequest":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js!/home/dclz/vivexelt-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/dclz/vivexelt-admin/src/core/services/http.js","dependencies":[{"path":"/home/dclz/vivexelt-admin/src/core/services/http.js","mtime":1620325383198},{"path":"/home/dclz/vivexelt-admin/node_modules/cache-loader/dist/cjs.js","mtime":1620142631738},{"path":"/home/dclz/vivexelt-admin/node_modules/babel-loader/lib/index.js","mtime":1620325525308},{"path":"/home/dclz/vivexelt-admin/node_modules/eslint-loader/index.js","mtime":1620142637801}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/dclz/vivexelt-admin/src/core/services/http.js"],"names":["Auth","isEmpty","isString","DEFAULT_REQUEST_TIMEOUT","HTTP_STATUS_SERVER_ERROR","SERVER_ERROR_MESSAGE","RESPONSE_TYPE_BLOB","RESPONSE_TYPE_JSON","HttpErrorHandler","getHeaderToken","token","getAccessToken","timeout","promise","controller","ms","Promise","resolve","reject","setTimeout","abort","Error","then","finally","clearTimeout","http","request","method","url","data","options","useHeader","isLogin","fullUrl","indexOf","apiDomain","process","env","VUE_APP_BASE_API_ENDPOINT","apiUrl","startsWith","replace","type","AbortController","init","toUpperCase","credentials","headers","Object","assign","signal","body","JSON","stringify","ArrayBuffer","FormData","tokenKey","fetch","response","ok","handle","json","status","message","success","error","requestError","statusCode","get","includes","blob","text","jsException","post","put","patch","delete","getWithNoHeader"],"mappings":"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","sourcesContent":["import Auth from './auth'\nimport isEmpty from 'lodash/isEmpty'\nimport { isString } from '@/core/utils/type'\nimport {\n  DEFAULT_REQUEST_TIMEOUT,\n  HTTP_STATUS_SERVER_ERROR,\n  SERVER_ERROR_MESSAGE,\n  RESPONSE_TYPE_BLOB,\n  RESPONSE_TYPE_JSON,\n} from '../constants/http'\nimport HttpErrorHandler from '@/core/helpers/httpErrorHandler'\n\n/**\n * Get header token\n * @returns object\n */\nexport function getHeaderToken() {\n  let token = Auth.getAccessToken();\n  token = token ? token : \"default_token\";\n\n  return {\n    \"X-Access-Token\": token,\n  };\n}\n\n/**\n * Handle request timeout\n * @param promise\n * @param controller\n * @param ms\n * @returns {Promise<any>}\n */\nexport function timeout(promise, controller, ms) {\n  let timeout\n  return new Promise(function (resolve, reject) {\n    timeout = setTimeout(function () {\n      if (controller) {\n        controller.abort()\n      }\n\n      reject(new Error('Request timeout'))\n    }, ms)\n\n    promise.then(resolve, reject).finally(() => {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n    })\n  })\n}\n\nexport const http = {\n  async request(method, url, data, options = {}, useHeader = true, isLogin) {\n    try {\n      const fullUrl = url.indexOf('http') === 0\n      let apiDomain = process.env.VUE_APP_BASE_API_ENDPOINT || '/'\n\n      let apiUrl = fullUrl ? url : `${apiDomain}${url}`\n      if (apiUrl.startsWith('//')) {\n        apiUrl = apiUrl.replace(/\\/\\//, '/')\n      }\n      const token = getHeaderToken()\n      let type, ms\n\n      if (isString(options)) {\n        type = options\n        ms = DEFAULT_REQUEST_TIMEOUT\n      } else {\n        type = options.type || RESPONSE_TYPE_JSON\n        ms = options.timeout || DEFAULT_REQUEST_TIMEOUT\n      }\n\n      const controller = new AbortController()\n      const init = {\n        method: method.toUpperCase(),\n        credentials: 'same-origin',\n        headers: Object.assign({}, options.headers || {}),\n        signal: controller.signal,\n      }\n\n      if (token) {\n        init.headers = Object.assign(init.headers, token)\n      }\n      if (!isEmpty(data)) {\n        init.body = JSON.stringify(data)\n      }\n\n      if (data instanceof ArrayBuffer || data instanceof FormData) {\n        init.body = data\n      }\n\n      const tokenKey = 'X-Access-Token'\n\n      if (tokenKey in init.headers && init.headers[tokenKey] == '') {\n        init.headers[tokenKey] = 'default_token'\n      }\n\n      if (!useHeader) {\n        init.headers = {}\n      }\n\n      if (isLogin) {\n        init.headers['Content-Type'] = 'application/json'\n      }\n\n      let response\n      response = await timeout(fetch(apiUrl, init), controller, ms)\n      if (!response.ok) {\n        HttpErrorHandler.handle(response)\n        let data = {}\n        try {\n          data = await response.json()\n        } catch (error) {\n          data = {}\n        }\n\n        if (response.status === HTTP_STATUS_SERVER_ERROR) {\n          data = Object.assign({ message: SERVER_ERROR_MESSAGE }, data)\n        }\n\n        return Object.assign(\n          {\n            success: false,\n            message: '',\n            error: true,\n            requestError: true,\n            statusCode: response.status,\n          },\n          data\n        )\n      }\n\n      if (\n        type === RESPONSE_TYPE_BLOB ||\n        (response.headers.get('content-type') &&\n          response.headers.get('content-type').includes('text/csv'))\n      ) {\n        return await response.blob()\n      }\n\n      if (type === RESPONSE_TYPE_JSON) {\n        return await response.json()\n      }\n\n      return await response.text()\n    } catch (e) {\n      return {\n        jsException: e,\n        success: false,\n        error: true,\n        requestError: true,\n        message: SERVER_ERROR_MESSAGE,\n      }\n    }\n  },\n  get(url, options) {\n    return this.request('get', url, {}, options)\n  },\n  post(url, data, options, isLogin) {\n    return this.request('post', url, data, options, true, isLogin)\n  },\n  put(url, data, options) {\n    return this.request('put', url, data, options)\n  },\n  patch(url, data, options) {\n    return this.request('patch', url, data, options)\n  },\n  delete(url, data = {}, options) {\n    return this.request('delete', url, data, options)\n  },\n  getWithNoHeader(url, options = { type: RESPONSE_TYPE_JSON }) {\n    return this.request('get', url, {}, true, options, false)\n  },\n}\n\nexport default http"]}]}